//
//  main.m
//  BMITime
//
//  Created by Waine Tam on 12/7/14.
//  Copyright (c) 2014 Big Nerd Ranch. All rights reserved.
//

#import <Foundation/Foundation.h>
//#import "BNRPerson.h" // use quotes to find library within current project vs <>, which means precompiled
#import "BNREmployee.h"
#import "BNRAsset.h"

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        // Create an array of BNREmployee objects
        NSMutableArray *employees = [[NSMutableArray alloc] init];
        
        // Create a dictionary of executives
        NSMutableDictionary *executives = [[NSMutableDictionary alloc] init];
        
        for (int i = 0; i < 10; i++) {
            // create an instance of BNREmployee
            BNREmployee *mikey = [[BNREmployee alloc] init];
            // give instance vars interesting values using setters
            //        [mikey setWeightInKilos:96];
            //        [mikey setHeightInMeters:1.8];
            mikey.weightInKilos = 96 + i;
            mikey.heightInMeters = 1.8 + i/10.0;
            mikey.employeeID = i;
            
            [employees addObject:mikey];
            
            // is this the first employee?
            if(i == 0) {
                [executives setObject:mikey forKey:@"CEO"];
            }
            // if this the second employee?
            if(i == 1) {
                [executives setObject:mikey forKey:@"CTO"];
            }
        }
        
        NSMutableArray *allAssets = [[NSMutableArray alloc] init];
        
        for (int i = 0; i < 10; i++) {
            // create an asset
            BNRAsset *asset = [[BNRAsset alloc] init];
            
            // give it an interesting label
            NSString *currentLabel = [NSString stringWithFormat:@"Laptop %d", i];
            asset.label = currentLabel;
            asset.resaleValue = 350 + i*17;
            
            // get a random number between 0 and 9 inclusive
            NSUInteger randomIndex = random() % [employees count];
            
            // find that employee
            BNREmployee *randomEmployee = [employees objectAtIndex:randomIndex];
            
            // assign the assets to the employee
            [randomEmployee addAsset:asset];
            
            [allAssets addObject:asset];
        }
        
        NSSortDescriptor *voa = [NSSortDescriptor sortDescriptorWithKey:@"valueOfAssets"
                                                              ascending:YES];
        
        NSSortDescriptor *eid = [NSSortDescriptor sortDescriptorWithKey:@"employeeID"
                                                              ascending:YES];
        
        [employees sortUsingDescriptors:@[voa, eid]];
        
        NSLog(@"Employees: %@", employees);
        
        NSLog(@"Giving up ownership of one employee");

        [employees removeObjectAtIndex:5];
        
        NSLog(@"allAssets: %@", allAssets);
        
        // print out entire dictionary
        NSLog(@"executives: %@", executives);
        
        // print out CEO's info
        NSLog(@"CEO: %@", executives[@"CEO"]);
        executives = nil;
        
        NSLog(@"Giving up ownership of arrays");

        allAssets = nil;
        employees = nil;
        
        
//        mikey.hireDate = [NSDate dateWithTimeInterval:(NSTimeInterval)0
//                                            sinceDate:[NSDate date]];
        
        // log instance vars using getters
//        float height = [mikey heightInMeters];
//        int weight = [mikey weightInKilos];
//        float height = mikey.heightInMeters;
//        int weight = mikey.weightInKilos;
        
//        NSLog(@"mikey is %.2f meters tall and weighs %d kg", height, weight);
//        NSLog(@"Employee %u is hired on %@", mikey.employeeID, mikey.hireDate);
//        NSLog(@"Mikey points to %@", [mikey class]);
        
//        NSDate *date = mikey.hireDate;
//        NSLog(@"%@ hired on %@", mikey, date);
        
        // log some values using custom methods
//        float bmi = [mikey bodyMassIndex];
//        double years = [mikey yearsOfEmployment];
//        NSLog(@"mikey has a BMI of %.2f, has worked with us for %.2f years", bmi, years);
        
    }
    sleep(100);
    return 0;
}
